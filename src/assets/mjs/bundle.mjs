class t extends HTMLElement{#t(){let t=this.querySelector("template"),e=t.content.children[0].cloneNode(!0);t.insertAdjacentElement("afterend",e)}#e(){navigator.geolocation.getCurrentPosition((t=>{this.querySelector('[name="latitude"]').value=t.coords.latitude,this.querySelector('[name="longitude"]').value=t.coords.longitude}),(t=>{console.warn(`ERROR(${t.code}): ${t.message}`)}),{enableHighAccuracy:!0,timeout:5e3,maximumAge:0})}connectedCallback(){this.#t(),this.addEventListener("click",this.#e.bind(this))}}function e(){return window.location.href.indexOf("/birds-of-zevenwacht/")>-1?"/birds-of-zevenwacht/":"/"}customElements.define("location-lookup",t);class i extends HTMLElement{#i;#n(t){return!!document.getElementById(t)}#o(){const t="script-leaflet",e="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js",i="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=",n="";if(!this.#n(t)){let o=document.createElement("script");o.id=t,o.src=e,o.integrity=i,o.crossOrigin=n,o.onload=this.#a.bind(this),document.head.append(o)}}#r(){const t="stylesheet-leaflet",e="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css",i="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=",n="";if(!this.#n(t)){let o=document.createElement("link");o.id=t,o.rel="stylesheet",o.href=e,o.integrity=i,o.crossOrigin=n,document.head.append(o)}}#s(t){let e={className:`icon_${t}`,iconAnchor:[0,24],labelAnchor:[-6,0],popupAnchor:[0,-36],html:"<span></span>"};return window.L.divIcon(e)}#d(t,i){window.L.marker([i.location.latitude,i.location.longitude],{icon:this.#s(t)}).addTo(this.#i).bindPopup(function(t){return"location"===t?null:"sighting"===t?`\n\t\t\t\t<b>Sighting</b> on ${new Date(i.item.datetime).toISOString().substring(0,10)}<br>\n\t\t\t\t<a href="${e()}sightings/${i.id}-${i.item.birdId}/">${i.item.quantity} Ã— ${i.item.bird.name}</a>\n\t\t\t`:"sightings"===t?`\n\t\t\t\t<b>Grouped Sightings</b><br>\n\t\t\t\t<a href="${e()}areas/${i.id}/">${i.area.name}</a>\n\t\t\t`:"photo"===t?`\n\t\t\t\t<b>Photo</b> on ${new Date(i.item.datetime).toISOString().substring(0,10)}<br>\n\t\t\t\t<a href="${e()}photos/${i.id}-${i.item.photographer}/">${i.item.birds[0].name}</a>\n\t\t\t`:"photos"===t?`\n\t\t\t\t<b>Grouped Photos</b><br>\n\t\t\t\t<a href="${e()}areas/${i.id}/">${i.area.name}</a>\n\t\t\t`:void 0}(t))}#l(t,e){window.L.marker([t.latitude,t.longitude],{icon:this.#s(e)}).addTo(this.#i),this.#i.flyTo({lat:t.latitude,lng:t.longitude})}#c(t,e){let i={};e.forEach((e=>{if(!e.location.latitude)return void(i[e.location.areaId]||(i[e.location.areaId]={id:e.location.areaId,area:e.location.area,location:{latitude:e.location.area.location.latitude,longitude:e.location.area.location.longitude}}));let n={id:e.id,location:e.location,item:e};this.#d(t,n)})),Object.keys(i).forEach((e=>{this.#d(`${t}s`,i[e])}))}#h(t){let e=window.L.polygon(t,{color:"hsla(220 50% 50% / 0.80)"}).addTo(this.#i);this.#i.fitBounds(e.getBounds())}#a(){if(this.#i=window.L.map(this.getAttribute("id"),{scrollWheelZoom:!1}).setView([parseFloat(this.getAttribute("latitude")),parseFloat(this.getAttribute("longitude"))],parseInt(this.getAttribute("zoom"))),window.L.tileLayer("https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}",{attribution:`<a href="${e()}attribution/">Attribution</a>`}).addTo(this.#i),this.hasAttribute("marker-latitude")){let t={latitude:parseFloat(this.getAttribute("marker-latitude")),longitude:parseFloat(this.getAttribute("marker-longitude"))};this.#l(t,this.getAttribute("type"))}if(this.hasAttribute("sightings")){const t=this.getAttribute("sightings");fetch(t).then((t=>t.json())).then((t=>{this.#c("sighting",t)}))}if(this.hasAttribute("photos")){const t=this.getAttribute("photos");fetch(t).then((t=>t.json())).then((t=>{this.#c("photo",t)}))}if(this.hasAttribute("boundaries")){const t=this.getAttribute("boundaries");fetch(t).then((t=>t.json())).then((t=>{this.#h(t)}))}}connectedCallback(){this.#o(),this.#r()}}customElements.define("map-embed",i);const n=()=>{let t=window.localStorage.getItem("PAT");if(t)return t;let e=window.prompt("Please enter your PAT");return e?(window.localStorage.setItem("PAT",e),e):void 0},o=t=>{const e=(t=>{let e=t.get("description").replace("\n\n","\n").replace("\n","\n  ");return`datetime: ${t.get("datetime")}+02:00\ndescription: |-\n  ${e}\nbird:\n  id: ${t.get("species")}\n  quantity: ${t.get("quantity")}\nobservers:\n  - shaun\nlocation:\n  area: ${t.get("area")}\n  latitude: ${t.get("latitude")}\n  longitude: ${t.get("longitude")}\n`})(t),i=(t=>{const e=Array.from(t,(t=>String.fromCodePoint(t))).join("");return btoa(e)})((new TextEncoder).encode(e));return i||null};let a;const r=t=>{for(let e of t)e.disabled=!!e.disabled},s=t=>{t.preventDefault();const e=t.target.closest("form"),i=e.querySelectorAll("button"),s=new FormData(e);r(i);let d=o(s);d?async function(t){const e=new a({auth:n()}),i=(new Date).toISOString().substring(0,16).replace(":","_");await e.request("PUT /repos/ndorfin/birds-of-zevenwacht/contents/{path}",{headers:{"X-GitHub-Api-Version":"2022-11-28"},branch:"online-sightings",path:`src/_data/sightings/${i}.yml`,message:`Sighting added: ${i}`,content:`${t}`})}(d).then((()=>{e.reset(),window.alert("Sighting submitted, thanks!"),r(i)})):(window.alert("File creation failed"),r(i))};document.querySelector("#form_sighting_add")&&(a=await import("https://esm.sh/@octokit/core"),document.addEventListener("submit",s));
