class t extends HTMLElement{#t(){let t=this.querySelector("template"),e=t.content.children[0].cloneNode(!0);t.insertAdjacentElement("afterend",e)}#e(){navigator.geolocation.getCurrentPosition((t=>{this.querySelector('[name="latitude"]').value=t.coords.latitude,this.querySelector('[name="longitude"]').value=t.coords.longitude}),(t=>{console.warn(`ERROR(${t.code}): ${t.message}`)}),{enableHighAccuracy:!0,timeout:5e3,maximumAge:0})}connectedCallback(){this.#t(),this.addEventListener("click",this.#e.bind(this))}}function e(){return window.location.href.includes("/birds-of-zevenwacht/")?"/birds-of-zevenwacht/":"/"}customElements.define("location-lookup",t);class i extends HTMLElement{observer;#i;#a(t){return!!document.getElementById(t)}#r(){const t="script-leaflet";if(!this.#a(t)){let i=document.createElement("script");i.id=t,i.src=`${e()}assets/mjs/lib/leaflet.1.9.4.js`,i.onload=this.#n.bind(this),document.head.append(i)}}#o(t){let e={className:`icon_${t}`,iconAnchor:[0,24],labelAnchor:[-6,0],popupAnchor:[0,-36],html:"<span></span>"};return window.L.divIcon(e)}#s(t,i){window.L.marker([i.location.latitude,i.location.longitude],{icon:this.#o(t)}).addTo(this.#i).bindPopup(function(t){return"sighting"===t?`\n\t\t\t\t<b>Sighting</b> on ${new Date(i.item.datetime).toISOString().substring(0,10)}<br>\n\t\t\t\t<a href="${e()}sightings/${i.id}-${i.item.birdId}/">${i.item.quantity} Ã— ${i.item.bird.name}</a>\n\t\t\t`:"sightings"===t?`\n\t\t\t\t<b>Grouped Sightings</b><br>\n\t\t\t\t<a href="${e()}areas/${i.id}/">${i.area.name}</a>\n\t\t\t`:"photo"===t?`\n\t\t\t\t<b>Photo</b> on ${new Date(i.item.datetime).toISOString().substring(0,10)}<br>\n\t\t\t\t<a href="${e()}photos/${i.id}-${i.item.photographer}/">${i.item.birds[0].name}</a>\n\t\t\t`:"photos"===t?`\n\t\t\t\t<b>Grouped Photos</b><br>\n\t\t\t\t<a href="${e()}areas/${i.id}/">${i.area.name}</a>\n\t\t\t`:void 0}(t))}#l(t,e){window.L.marker([t.latitude,t.longitude],{icon:this.#o(e)}).addTo(this.#i),this.#i.flyTo({lat:t.latitude,lng:t.longitude})}#c(t,e){let i={};e.forEach((e=>{if(!e.location.latitude)return void(i[e.location.areaId]||(i[e.location.areaId]={id:e.location.areaId,area:e.location.area,location:{latitude:e.location.area.location.latitude,longitude:e.location.area.location.longitude}}));let a={id:e.id,location:e.location,item:e};this.#s(t,a)})),Object.keys(i).forEach((e=>{this.#s(`${t}s`,i[e])}))}#d(t){window.L.polygon(t,{color:"hsla(220 50% 50% / 0.80)"}).addTo(this.#i)}#n(){if(this.#i=window.L.map(this.id,{scrollWheelZoom:!1}).setView([this.latitude,this.longitude],this.zoom),window.L.tileLayer("https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}",{attribution:`<a href="${e()}attribution/">Attribution</a>`}).addTo(this.#i),this.markerLatitude){let t={latitude:parseFloat(this.markerLatitude),longitude:parseFloat(this.markerLongitude)};this.#l(t,this.type)}this.sightings&&fetch(this.sightings).then((t=>t.json())).then((t=>{this.#c("sighting",t)})),this.photos&&fetch(this.photos).then((t=>t.json())).then((t=>{this.#c("photo",t)})),this.boundaries&&fetch(this.boundaries).then((t=>t.json())).then((t=>{this.#d(t)})),this.#h()}#u(){this.#i.invalidateSize()}#h(){const t={root:document.querySelector("html"),threshold:.1};this.observer=new IntersectionObserver(this.#u.bind(this),t),this.observer.observe(this)}connectedCallback(){this.#r()}get boundaries(){return this.getAttribute("boundaries")}get latitude(){return parseFloat(this.getAttribute("latitude"))}get longitude(){return parseFloat(this.getAttribute("longitude"))}get location(){return this.getAttribute("location")}get markerLatitude(){return parseFloat(this.getAttribute("marker-latitude"))}get markerLongitude(){return parseFloat(this.getAttribute("marker-longitude"))}get photos(){return this.getAttribute("photos")}get sightings(){return this.getAttribute("sightings")}get type(){return this.getAttribute("type")}get zoom(){return parseInt(this.getAttribute("zoom"))}}customElements.define("map-embed",i);class a extends HTMLElement{#g(){this.querySelector("nav ul").setAttribute("role","tablist"),Array.from(this.querySelectorAll("nav li")).forEach((t=>{t.setAttribute("role","presentation")})),Array.from(this.querySelectorAll("nav li a")).forEach((t=>{t.setAttribute("role","tab"),t.setAttribute("aria-controls",this.#b(t.href))})),Array.from(this.querySelectorAll("nav ~ *")).forEach((t=>{t.setAttribute("role","tabpanel")}))}#m(){let t=window.location.hash,e=this.#p(t);if(e){let t=this.querySelector('nav a[aria-selected="true"]');t&&t.removeAttribute("aria-selected"),e.setAttribute("aria-selected","true"),this.activeTab=this.#v(e)}}#p(t){let e=this.querySelector(`[href="${t}"]`);return e&&e.closest("nav")?e:null}#f(){return this.querySelector(`nav li:nth-child(${this.activeTab+1}) a`)}#v(t){let e=t.closest("li");return Array.prototype.indexOf.call(e.parentNode.children,e)}#b(t){return t.split("#")[1]}#A(){let t=this.#f();if(t){let e=this.#b(t.href);this.#w(e)}}#w(t){let e=this.querySelector("nav ~ [data-active]");e&&e.removeAttribute("data-active"),this.querySelector(`#${t}`).setAttribute("data-active","")}#S(t){if(t.target.closest("nav")){t.preventDefault();let e=this.querySelector('nav a[aria-selected="true"]');e&&e.removeAttribute("aria-selected");let i=t.target.closest("a[href]"),a=this.#b(i.href);i.setAttribute("aria-selected","true"),window.history.pushState("","",`#${a}`),this.activeTab=this.#v(i),this.#w(a)}}connectedCallback(){this.#g(),this.#m(),0==this.hasAttribute("data-active")&&-1!=this.initialTab&&(this.activeTab=this.initialTab,this.querySelector(`nav li:nth-child(${this.activeTab+1}) a`).setAttribute("aria-selected","true"),this.#A()),this.addEventListener("click",this.#S.bind(this))}get initialTab(){return this.hasAttribute("data-initial")?parseInt(this.getAttribute("data-initial")):0}get activeTab(){if(this.hasAttribute("data-active"))return parseInt(this.getAttribute("data-active"))}set activeTab(t){this.setAttribute("data-active",t)}}customElements.define("tab-group",a);const r=()=>{let t=window.localStorage.getItem("PAT");if(t)return t;let e=window.prompt("Please enter your PAT");return e?(window.localStorage.setItem("PAT",e),e):void 0},n=t=>{const e=(t=>{let e=t.get("description").replace("\n\n","\n").replace("\n","\n  ");return`datetime: ${new Date(t.get("datetime")).toISOString()}\ndescription: |-\n  ${e}\nbird:\n  id: ${t.get("species")}\n  quantity: ${t.get("quantity")}\nobservers:\n  - shaun\nlocation:\n  area: ${t.get("area")}\n  latitude: ${t.get("latitude")}\n  longitude: ${t.get("longitude")}\n`})(t),i=(t=>{const e=Array.from(t,(t=>String.fromCodePoint(t))).join("");return btoa(e)})((new TextEncoder).encode(e));return i||null};let o;const s=t=>{for(let e of t)e.disabled=!!e.disabled},l=t=>{t.preventDefault();const e=t.target.closest("form"),i=e.querySelectorAll("button"),a=new FormData(e);s(i);let l=n(a);l?async function(t){const e=new o({auth:r()}),i=(new Date).toISOString();await e.request("PUT /repos/ndorfin/birds-of-zevenwacht/contents/{path}",{headers:{"X-GitHub-Api-Version":"2022-11-28"},branch:"online-sightings",path:`src/_data/sightings/${i}_shaun.yml`,message:`Sighting added: ${i}`,content:`${t}`})}(l).then((()=>{e.reset(),window.alert("Sighting submitted, thanks!"),s(i)})):(window.alert("File creation failed"),s(i))};document.querySelector("#form_sighting_add")&&(o=await import("https://esm.sh/@octokit/core"),document.addEventListener("submit",l)),async function(){if("serviceWorker"in navigator)try{const t=await navigator.serviceWorker.register(`${e()}service-worker.js`,{scope:`${e()}`});t.installing?console.log("Service worker installing"):t.waiting?console.log("Service worker installed"):t.active&&console.log("Service worker active")}catch(t){console.error(`Registration failed with ${t}`)}}();
